name: Publish Songs DB (Pages)

on:
  schedule:
    - cron: '0 3 * * 6'  # Every Saturday 03:00 UTC
  workflow_dispatch:

permissions:
  contents: read
  pages: write      # to deploy to Pages
  id-token: write   # to verify the deployment originates from this workflow

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate database
        env:
          YOUTUBE_API_KEYS: ${{ secrets.YOUTUBE_API_KEYS }}
        run: |
          python scripts/update_charts.py --mode latest
          python scripts/update_videos.py

      - name: Prepare public artifacts
        run: |
          mkdir -p public
          cp songs.db public/songs.db
          # Hash (just digest for easy parsing)
          shasum -a 256 songs.db | cut -d ' ' -f1 > public/songs.sha256
          # Timestamp (UTC ISO8601)
          date -u +"%Y-%m-%dT%H:%M:%SZ" > public/timestamp.txt
          # Simple JSON metadata (can be extended later)
          python -c "import json,hashlib,pathlib,datetime; p=pathlib.Path('songs.db'); sha=hashlib.sha256(p.read_bytes()).hexdigest(); meta={'file':'songs.db','size_bytes':p.stat().st_size,'sha256':sha,'generated_utc':datetime.datetime.utcnow().isoformat()+'Z','schema':{'tables':['songs','playlists','playlist_songs']}}; pathlib.Path('public/metadata.json').write_text(json.dumps(meta,indent=2))"

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
